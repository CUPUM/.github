name: Parse Contact Form
on:
  workflow_call:

jobs:
  parse_issue:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set GH_TOKEN from ORG_PAT
        run: echo "GH_TOKEN=${{ secrets.ORG_PAT }}" >> $GITHUB_ENV
        env:
          ORG_PAT: ${{ secrets.ORG_PAT }}

      - name: Debug GH_TOKEN Before Authentication
        run: |
          if [[ -z "$GH_TOKEN" ]]; then
            echo "❌ ERROR: GH_TOKEN is empty!"
            exit 1
          fi
          echo "✅ GH_TOKEN is set."

      - name: Check Authentication Status
        run: |
          echo "🔍 Checking authentication with gh auth status..."
          gh auth status || { echo "❌ ERROR: Not authenticated!"; exit 1; }
        env:
          GH_TOKEN: ${{ secrets.ORG_PAT }}

      - name: Retrieve Project Node ID
        id: get_project_id
        run: |
          PROJECT_NODE_ID=$(gh api graphql -F organization="CUPUM" -f query='
          query($organization: String!) {
            organization(login: $organization) {
              projectV2(number: 179) {
                id
              }
            }
          }' --jq '.data.organization.projectV2.id')

          if [[ -z "$PROJECT_NODE_ID" ]]; then
            echo "❌ ERROR: Failed to retrieve project node ID!"
            exit 1
          fi

          echo "✅ Project Node ID: $PROJECT_NODE_ID"
          echo "PROJECT_NODE_ID=$PROJECT_NODE_ID" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.ORG_PAT }}

      - name: Retrieve Project Fields Using REST API (Avoid GraphQL)
        id: get_fields_rest
        run: |
          echo "🔍 Fetching project fields using REST API..."
          
          # Use REST API to get all fields in the project
          FIELDS_JSON=$(gh api --method GET \
            -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "/projects/$PROJECT_NODE_ID/fields")

          echo "$FIELDS_JSON" > fields.json
          echo "✅ Successfully retrieved project fields!"
        env:
          GH_TOKEN: ${{ secrets.ORG_PAT }}

      - name: Extract Field IDs Using JQ
        id: extract_field_ids
        run: |
          echo "🔍 Extracting specific field IDs..."

          # Extract field IDs from REST response
          FIRST_NAME_FIELD_ID=$(jq -r '.[] | select(.name=="First Name") | .id' fields.json)
          LAST_NAME_FIELD_ID=$(jq -r '.[] | select(.name=="Last Name") | .id' fields.json)
          ORGANIZATION_FIELD_ID=$(jq -r '.[] | select(.name=="Organization") | .id' fields.json)

          # Ensure all fields were found
          if [[ -z "$FIRST_NAME_FIELD_ID" || "$FIRST_NAME_FIELD_ID" == "null" ]] || 
             [[ -z "$LAST_NAME_FIELD_ID" || "$LAST_NAME_FIELD_ID" == "null" ]] || 
             [[ -z "$ORGANIZATION_FIELD_ID" || "$ORGANIZATION_FIELD_ID" == "null" ]]; then
            echo "❌ ERROR: Failed to retrieve one or more field IDs!"
            exit 1
          fi

          echo "✅ First Name Field ID: $FIRST_NAME_FIELD_ID"
          echo "✅ Last Name Field ID: $LAST_NAME_FIELD_ID"
          echo "✅ Organization Field ID: $ORGANIZATION_FIELD_ID"

          # Save extracted values to the environment
          echo "FIRST_NAME_FIELD_ID=$FIRST_NAME_FIELD_ID" >> $GITHUB_ENV
          echo "LAST_NAME_FIELD_ID=$LAST_NAME_FIELD_ID" >> $GITHUB_ENV
          echo "ORGANIZATION_FIELD_ID=$ORGANIZATION_FIELD_ID" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.ORG_PAT }}

      - name: Extract Issue Form Data
        id: extract_issue_form
        run: |
          ISSUE_BODY=$(jq -r '.issue.body' <<< '${{ toJson(github.event) }}')

          FIRST_NAME=$(echo "$ISSUE_BODY" | awk -F "\*\*First Name\*\*" '{print $2}' | awk -F "\n" '{print $1}' | xargs)
          LAST_NAME=$(echo "$ISSUE_BODY" | awk -F "\*\*Last Name\*\*" '{print $2}' | awk -F "\n" '{print $1}' | xargs)
          ORGANIZATION=$(echo "$ISSUE_BODY" | awk -F "\*\*Organization\*\*" '{print $2}' | awk -F "\n" '{print $1}' | xargs)

          echo "FIRST_NAME=$FIRST_NAME" >> $GITHUB_ENV
          echo "LAST_NAME=$LAST_NAME" >> $GITHUB_ENV
          echo "ORGANIZATION=$ORGANIZATION" >> $GITHUB_ENV
