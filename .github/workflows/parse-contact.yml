name: Parse Contact Form
on:
  workflow_call:

jobs:
  parse_issue:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract Issue Form Data
        id: extract
        run: |
          ISSUE_BODY=$(jq -r '.issue.body' <<< '${{ toJson(github.event) }}')

          FIRST_NAME=$(echo "$ISSUE_BODY" | awk -F "\*\*First Name\*\*" '{print $2}' | awk -F "\n" '{print $1}' | xargs)
          LAST_NAME=$(echo "$ISSUE_BODY" | awk -F "\*\*Last Name\*\*" '{print $2}' | awk -F "\n" '{print $1}' | xargs)
          ORGANIZATION=$(echo "$ISSUE_BODY" | awk -F "\*\*Organization\*\*" '{print $2}' | awk -F "\n" '{print $1}' | xargs)

          echo "FIRST_NAME=$FIRST_NAME" >> $GITHUB_ENV
          echo "LAST_NAME=$LAST_NAME" >> $GITHUB_ENV
          echo "ORGANIZATION=$ORGANIZATION" >> $GITHUB_ENV

      - name: Debug Extracted Data
        run: |
          echo "Extracted First Name: $FIRST_NAME"
          echo "Extracted Last Name: $LAST_NAME"
          echo "Extracted Organization: $ORGANIZATION"

      - name: Get Issue ID
        id: get_issue_id
        run: |
          ISSUE_ID=$(gh issue view ${{ github.event.issue.number }} --json id --jq '.id')
          echo "ISSUE_ID=$ISSUE_ID" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.ORG_PAT }}

      - name: Assign Issue to GitHub Project
        run: |
          PROJECT_ID="179"  # Replace with your actual GitHub Project ID

          # Add issue to the project
          ITEM_ID=$(gh api graphql --method POST -F projectId="$PROJECT_ID" -F contentId="$ISSUE_ID" -f query='
          mutation($projectId: ID!, $contentId: ID!) {
            addProjectV2ItemById(input: {projectId: $projectId, contentId: $contentId}) {
              item {
                id
              }
            }
          }' | jq -r '.data.addProjectV2ItemById.item.id')

          echo "Added issue to project with ITEM_ID: $ITEM_ID"

          # Update fields using known IDs
          gh api graphql --method POST -F projectId="$PROJECT_ID" -F itemId="$ITEM_ID" -F fieldId="first_name" -F value="$FIRST_NAME" -f query='
          mutation($projectId: ID!, $itemId: ID!, $fieldId: ID!, $value: String!) {
            updateProjectV2ItemFieldValue(input: {
              projectId: $projectId
              itemId: $itemId
              fieldId: $fieldId
              value: { text: $value }
            }) {
              clientMutationId
            }
          }'

          gh api graphql --method POST -F projectId="$PROJECT_ID" -F itemId="$ITEM_ID" -F fieldId="last_name" -F value="$LAST_NAME" -f query='
          mutation($projectId: ID!, $itemId: ID!, $fieldId: ID!, $value: String!) {
            updateProjectV2ItemFieldValue(input: {
              projectId: $projectId
              itemId: $itemId
              fieldId: $fieldId
              value: { text: $value }
            }) {
              clientMutationId
            }
          }'

          gh api graphql --method POST -F projectId="$PROJECT_ID" -F itemId="$ITEM_ID" -F fieldId="organization" -F value="$ORGANIZATION" -f query='
          mutation($projectId: ID!, $itemId: ID!, $fieldId: ID!, $value: String!) {
            updateProjectV2ItemFieldValue(input: {
              projectId: $projectId
              itemId: $itemId
              fieldId: $fieldId
              value: { text: $value }
            }) {
              clientMutationId
            }
          }'
        env:
          GH_TOKEN: ${{ secrets.ORG_PAT }}
